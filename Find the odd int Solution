#include <vector>
#include <algorithm>
int findOdd(const std::vector<int>& numbers){
 	std::vector<int> onlyOneCopy;
	std::vector<int> number = numbers;
	
	for (auto elem : number)
	{
		if (std::binary_search(onlyOneCopy.begin(), onlyOneCopy.end(), elem))
		{
			continue;
		}
		else
		{
			onlyOneCopy.push_back(elem);
		}
	}
	std::vector<int> times(onlyOneCopy.size(), 0);
	for (int i = 0; i < number.size(); ++i)
	{
		std::cout << number[i] << " ";
	}
	std::cout << std::endl;
	for (int i = 0; i < onlyOneCopy.size(); ++i)
	{
		std::cout << onlyOneCopy[i] << " ";
	}
	std::cout << std::endl;
	for (int i = 0; i < number.size(); ++i)
	{
		for (int j = 0; j < onlyOneCopy.size(); ++j)
		{
			if (number[i] == onlyOneCopy[j])
			{
				times[j]++;
			}
		}
	}
	for (int i = 0; i < times.size(); ++i)
	{
		if (times[i] % 2 == 1)
		{
			return onlyOneCopy[i];
		}
	}
}
